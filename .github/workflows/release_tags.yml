name: Release Tags

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and release stable image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_USER_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      #     tags: |
      #       type=semver,pattern={{version}}

      - name: Set GoReleaser current tag
        env:
          REPOSITORY_NAME: ${{ github.event.repository.name }}
          EVENT_REF: ${{ github.event.ref }}
        run: echo "GORELEASER_CURRENT_TAG=v${EVENT_REF#refs/tags/${REPOSITORY_NAME}-}" >> "$GITHUB_ENV"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: "1.23.0"
          args: release --clean -f build/ci/.goreleaser.yml
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_USER_TOKEN }}

      - name: Scan for vulnerabilities
        uses: crazy-max/ghaction-container-scan@v3
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          dockerfile: ./build/package/docker/Dockerfile
          severity: HIGH,CRITICAL
          # severity_threshold: HIGH
          annotations: true

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.1

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: chart
        env:
          CR_TOKEN: "${{ secrets.RELEASE_USER_TOKEN }}"

      # - name: Delete chart-releaser tag
      #   env:
      #     REPOSITORY_NAME: ${{ github.event.repository.name }}
      #     EVENT_REF: ${{ github.event.ref }}
      #   shell: bash
      #   run: |
      #     git push --delete origin refs/tags/${REPOSITORY_NAME}-${EVENT_REF#refs/tags/v}
