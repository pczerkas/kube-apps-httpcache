name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
  pull_request:

env:
  REGISTRY: ghcr.io

jobs:
  verify_helm:
    name: Verify Helm chart
    runs-on: ubuntu-latest
    strategy:
      matrix:
        helm: [ '3.1.2' ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Helm
        run: |
          wget https://get.helm.sh/helm-v${{ matrix.helm }}-linux-amd64.tar.gz -O /tmp/helm.tar.gz
          tar xzf /tmp/helm.tar.gz -C /tmp --strip-components=1
          chmod +x /tmp/helm

      - name: Test template rendering
        run: /tmp/helm template ./chart/kube-apps-httpcache/.

      - name: Lint chart
        run: /tmp/helm lint ./chart/kube-apps-httpcache/

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      #################
      # - name: Log in to the Container registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.RELEASE_USER_TOKEN }}
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      #################

      - name: Set GoReleaser current tag
        env:
          REPOSITORY_NAME: ${{ github.event.repository.name }}
        # chart-releaser latest tag has non-semver format, need to convert it
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "GORELEASER_CURRENT_TAG=${LATEST_TAG//${REPOSITORY_NAME}\-/v}" >> "$GITHUB_ENV"
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: "1.23.0"
          args: release -f build/ci/.goreleaser.yml --snapshot --skip=publish --clean
  e2e:
    name: E2E
    runs-on: ubuntu-latest
    env:
      HELM_VERSION: 3.1.2
      REPOSITORY: local/kube-apps-httpcache
      TAG: "ci"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run: |
          DOCKER_BUILDKIT=1 \
          docker buildx build \
            -f build/package/docker/Dockerfile \
            --tag ${REPOSITORY}:${TAG} \
            --provenance false \
            .

      - name: Set up Helm
        run: |
          wget https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz -O /tmp/helm.tar.gz
          tar xzf /tmp/helm.tar.gz -C /tmp --strip-components=1
          chmod +x /tmp/helm

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0
        with:
          config: build/ci/kind-config.yaml

      - name: Install test backend
        run: |
          kubectl apply -f test/test.yaml

      - name: Install Helm chart
        run: |
          /tmp/helm install \
            -f test/chart-values.yaml \
            -f build/ci/chart-values.yaml \
            kube-apps-httpcache \
            ./chart/kube-apps-httpcache
